name: CI • Build, Test, and Publish Docker Images

on:
  push:
    branches: ["master"]
    tags: [ "v*", "release-*" ]
  pull_request:
    branches: ["master"]

permissions:
  contents: read
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  # image names will be ghcr.io/<owner>/<repo>-api and -ui
  IMAGE_API: ${{ github.repository }}-api
  IMAGE_UI:  ${{ github.repository }}-ui

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Restore • Build • Test (.NET)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 9.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Restore
        run: dotnet restore Timesheet.sln

      - name: Build (Release)
        run: dotnet build Timesheet.sln -c Release --no-restore

      - name: Test
        run: dotnet test Tests/Timesheet.Tests/Timesheet.Tests.csproj -c Release --no-build --logger "trx;LogFileName=test-results.trx"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/TestResults/*.trx'

  build-and-push:
    name: Build & Push Docker images (API + UI)
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (optional multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags
        id: meta
        run: |
          SHA_TAG=${GITHUB_SHA::12}
          echo "sha_tag=$SHA_TAG" >> $GITHUB_OUTPUT
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "ver_tag=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          else
            echo "ver_tag=" >> $GITHUB_OUTPUT
          fi

      # -------- API image --------
      - name: Build & Push API
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Src/Timesheet.API/Dockerfile
          push: true
          # target platforms; keep linux/amd64 unless you need others
          platforms: linux/amd64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_API }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_API }}:${{ steps.meta.outputs.sha_tag }}
            ${{ steps.meta.outputs.ver_tag != '' && format('{0}/{1}:{2}', env.REGISTRY, env.IMAGE_API, steps.meta.outputs.ver_tag) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # -------- UI image --------
      - name: Build & Push UI
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Src/Timesheet.UI/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_UI }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_UI }}:${{ steps.meta.outputs.sha_tag }}
            ${{ steps.meta.outputs.ver_tag != '' && format('{0}/{1}:{2}', env.REGISTRY, env.IMAGE_UI, steps.meta.outputs.ver_tag) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
